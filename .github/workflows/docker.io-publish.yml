jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # Quyền này RẤT QUAN TRỌNG để cosign có thể ký image
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read VERSION file
        id: read_version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV

      # Bạn không cần bước cài đặt cosign riêng nữa, build-push-action sẽ tự xử lý
      # - name: Install cosign ...

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Log into Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.VERSION }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}

      # --- THAY ĐỔI Ở ĐÂY ---
      - name: Build, push, and sign Docker image
        id: build-and-push
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Thêm dòng này sẽ tự động build provenance và ký image bằng Cosign
          provenance: true 

      # --- XÓA BỎ HOÀN TOÀN BƯỚC NÀY ---
      # - name: Sign the published Docker image
      #   if: ${{ github.event_name != 'pull_request' }}
      #   env:
      #     TAGS: ${{ steps.meta.outputs.tags }}
      #     DIGEST: ${{ steps.build-and-push.outputs.digest }}
      #   run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}